<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChargingPile.API</name>
    </assembly>
    <members>
        <member name="T:ChargingPile.API.Communication.TcpPacket">
            <summary>
            TCP数据包格式 - 简化版本
            </summary>
        </member>
        <member name="T:ChargingPile.API.Communication.TcpPacket.ControlCodes">
            <summary>
            控制码定义
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.DEVICE_LOGIN">
            <summary>
            设备登录
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.HEARTBEAT">
            <summary>
            心跳数据
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.START_CHARGING">
            <summary>
            远程启动充电
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.STOP_CHARGING">
            <summary>
            远程停止充电
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.SUBMIT_CHARGING_END">
            <summary>
            提交充电结束状态
            </summary>
        </member>
        <member name="F:ChargingPile.API.Communication.TcpPacket.ControlCodes.REPORT_IMEI">
            <summary>
            主动上报IMEI身份
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpPacket.ToBytes">
            <summary>
            将数据包转换为字节数组 - 简化版本，仅供编译
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpPacket.FromBytes(System.Byte[])">
            <summary>
            从字节数组解析数据包 - 简化版本，仅供编译
            </summary>
        </member>
        <member name="T:ChargingPile.API.Communication.TcpServer">
            <summary>
            TCP服务器类 - 空实现
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpServer.#ctor(Microsoft.Extensions.Logging.ILogger{ChargingPile.API.Communication.TcpServer})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpServer.StartAsync(System.Threading.CancellationToken)">
            <summary>
            启动TCP服务器
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpServer.Stop">
            <summary>
            停止TCP服务器
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpServer.GetConnectedDevices">
            <summary>
            获取已连接的设备列表
            </summary>
        </member>
        <member name="M:ChargingPile.API.Communication.TcpServer.GetDeviceEndPoint(System.String)">
            <summary>
            获取设备的连接端点
            </summary>
        </member>
        <member name="T:ChargingPile.API.Controllers.ChargingPileController">
            <summary>
            充电桩控制器
            </summary>
        </member>
        <member name="M:ChargingPile.API.Controllers.ChargingPileController.StartCharging(System.String,ChargingPile.API.Controllers.StartChargingRequest)">
            <summary>
            启动充电
            </summary>
            <param name="deviceAddress">设备地址</param>
            <param name="request">启动充电请求</param>
            <returns>操作结果</returns>
            <response code="200">启动充电命令已发送</response>
            <response code="400">请求参数无效</response>
            <response code="404">设备未连接</response>
        </member>
        <member name="M:ChargingPile.API.Controllers.ChargingPileController.StopCharging(System.String,ChargingPile.API.Controllers.StopChargingRequest)">
            <summary>
            停止充电
            </summary>
            <param name="deviceAddress">设备地址</param>
            <param name="request">停止充电请求</param>
            <returns>操作结果</returns>
            <response code="200">停止充电命令已发送</response>
            <response code="400">请求参数无效</response>
            <response code="404">设备未连接</response>
        </member>
        <member name="M:ChargingPile.API.Controllers.ChargingPileController.GetChargingStatus(System.String,System.Byte)">
            <summary>
            查询充电状态
            </summary>
            <param name="deviceAddress">设备地址</param>
            <param name="port">充电端口号</param>
            <returns>操作结果</returns>
            <response code="200">查询命令已发送</response>
            <response code="400">请求参数无效</response>
            <response code="404">设备未连接</response>
        </member>
        <member name="M:ChargingPile.API.Controllers.ChargingPileController.ConfigureChargingPile(System.String,System.Byte[])">
            <summary>
            配置充电桩
            </summary>
        </member>
        <member name="T:ChargingPile.API.Controllers.StartChargingRequest">
            <summary>
            启动充电请求
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.Port">
            <summary>
            端口号 (1-N)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.OrderId">
            <summary>
            订单号
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.StartMode">
            <summary>
            启动方式 (1:扫码支付 2:刷卡支付 3:管理员启动)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.CardId">
            <summary>
            卡号 (非IC卡启动时为0)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.ChargingMode">
            <summary>
            充电方式 (1:充满自停 2:按金额 3:按时间 4:按电量 5:其它)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.ChargingParam">
            <summary>
            充电参数 (秒/0.01元/0.01度)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StartChargingRequest.AvailableAmount">
            <summary>
            可用金额 (0.01元)
            </summary>
        </member>
        <member name="T:ChargingPile.API.Controllers.StopChargingRequest">
            <summary>
            停止充电请求
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StopChargingRequest.Port">
            <summary>
            端口号 (1-N)
            </summary>
        </member>
        <member name="P:ChargingPile.API.Controllers.StopChargingRequest.OrderId">
            <summary>
            订单号
            </summary>
        </member>
        <member name="T:ChargingPile.API.Controllers.DevicesController">
            <summary>
            设备控制器
            </summary>
        </member>
        <member name="M:ChargingPile.API.Controllers.DevicesController.GetConnectedDevices">
            <summary>
            获取当前已连接的设备列表
            </summary>
            <returns>设备列表</returns>
        </member>
        <member name="M:ChargingPile.API.Controllers.DevicesController.GetDeviceStatus(System.String)">
            <summary>
            获取设备连接状态
            </summary>
            <param name="imei">设备IMEI</param>
            <returns>设备连接状态</returns>
        </member>
        <member name="M:ChargingPile.API.Controllers.HomeController.Get">
            <summary>
            获取API信息
            </summary>
        </member>
        <member name="T:ChargingPile.API.Data.ApplicationDbContext">
            <summary>
            应用程序数据库上下文
            </summary>
        </member>
        <member name="M:ChargingPile.API.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{ChargingPile.API.Data.ApplicationDbContext})">
            <summary>
            构造函数
            </summary>
            <param name="options">数据库上下文选项</param>
        </member>
        <member name="M:ChargingPile.API.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            配置模型
            </summary>
            <param name="modelBuilder">模型构建器</param>
        </member>
        <member name="T:ChargingPile.API.Data.SpatialExtensions">
            <summary>
            空间扩展类，提供地理位置相关的扩展方法
            </summary>
        </member>
        <member name="M:ChargingPile.API.Data.SpatialExtensions.CreatePoint(System.Double,System.Double)">
            <summary>
            创建地理点
            </summary>
            <param name="longitude">经度</param>
            <param name="latitude">纬度</param>
            <returns>SQL Server地理点对象</returns>
        </member>
        <member name="T:ChargingPile.API.Extensions.LoggingExtensions">
            <summary>
            日志扩展方法，解决动态参数调用问题
            </summary>
        </member>
        <member name="M:ChargingPile.API.Extensions.LoggingExtensions.SafeLogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])">
            <summary>
            记录信息日志，解决动态参数调用问题
            </summary>
        </member>
        <member name="T:ChargingPile.API.Services.ChargingPileService">
            <summary>
            充电桩服务类 - 简化版
            </summary>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.#ctor(Microsoft.Extensions.Logging.ILogger{ChargingPile.API.Services.ChargingPileService},ChargingPile.API.Communication.TcpServer,System.Data.IDbConnection)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.GetChargingPileImeiAsync(System.String)">
            <summary>
            获取充电桩IMEI
            </summary>
            <returns>结果对象，包含是否成功、IMEI和错误消息</returns>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.ExecuteCommandAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}})">
            <summary>
            统一的命令执行方法，用于处理异常和IMEI查询
            </summary>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.StartChargingAsync(System.String,System.Byte,System.UInt32,System.Byte,System.UInt32,System.Byte,System.UInt32,System.Decimal)">
            <summary>
            远程启动充电
            </summary>
            <returns>操作结果，包含是否成功和消息</returns>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.StopChargingAsync(System.String,System.Byte,System.UInt32)">
            <summary>
            远程停止充电
            </summary>
            <returns>操作结果，包含是否成功和消息</returns>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.QueryChargingStatusAsync(System.String,System.Byte)">
            <summary>
            查询充电状态
            </summary>
            <returns>操作结果，包含是否成功和消息</returns>
        </member>
        <member name="M:ChargingPile.API.Services.ChargingPileService.ConfigureChargingPileAsync(System.String,System.Byte[])">
            <summary>
            配置充电桩参数
            </summary>
            <returns>操作结果，包含是否成功和消息</returns>
        </member>
        <member name="T:ChargingPile.API.Tests.EnhancedTestClient">
            <summary>
            增强版充电桩测试客户端 - 空实现
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.EnhancedTestClient.ConnectAsync">
            <summary>
            连接服务器
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.EnhancedTestClient.Disconnect">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.EnhancedTestClient.SendLoginRequestAsync">
            <summary>
            发送登录请求
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.EnhancedTestClient.SendHeartbeatAsync">
            <summary>
            发送心跳数据
            </summary>
        </member>
        <member name="T:ChargingPile.API.Tests.TestModule">
            <summary>
            测试模块入口类 - 简化版
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.TestModule.RunAsync">
            <summary>
            运行测试模块
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.TestModule.HasArgument(System.String)">
            <summary>
            判断是否包含指定参数
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.TestModule.GetArgumentValue``1(System.String,``0)">
            <summary>
            获取参数值
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.TestModule.ShowHelp">
            <summary>
            显示帮助信息
            </summary>
        </member>
        <member name="T:ChargingPile.API.Tests.Tools.ProtocolValidator">
            <summary>
            协议验证工具 - 简化版
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ProtocolValidator.ValidateRawPacket(System.Byte[])">
            <summary>
            验证原始字节数组是否符合协议规范
            </summary>
            <param name="bytes">原始字节数组</param>
            <returns>验证结果，包含是否通过和详细信息</returns>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ProtocolValidator.ValidatePacket(ChargingPile.API.Communication.TcpPacket)">
            <summary>
            验证TcpPacket对象是否符合协议规范
            </summary>
            <param name="packet">待验证的数据包</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ProtocolValidator.ValidateLoginPacket(ChargingPile.API.Communication.TcpPacket)">
            <summary>
            验证登录数据包
            </summary>
            <param name="packet">登录数据包</param>
            <returns>验证结果</returns>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ProtocolValidator.ValidateHeartbeatPacket(ChargingPile.API.Communication.TcpPacket)">
            <summary>
            验证心跳数据包
            </summary>
            <param name="packet">心跳数据包</param>
            <returns>验证结果</returns>
        </member>
        <member name="T:ChargingPile.API.Tests.Tools.ValidationResult">
            <summary>
            协议验证结果
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ValidationResult.AddError(System.String)">
            <summary>
            添加错误信息
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ValidationResult.AddWarning(System.String)">
            <summary>
            添加警告信息
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ValidationResult.AddInfo(System.String)">
            <summary>
            添加一般信息
            </summary>
        </member>
        <member name="M:ChargingPile.API.Tests.Tools.ValidationResult.ToString">
            <summary>
            转换为字符串
            </summary>
        </member>
    </members>
</doc>
